<?xml version="1.0" encoding="UTF-8"?>

<!-- $Id: mysql-ds.xml 71535 2008-04-01 07:05:03Z adrian@jboss.org $ -->
<!--  Datasource config for MySQL using 3.0.9 available from:
http://www.mysql.com/downloads/api-jdbc-stable.html
-->

<!-- REM: 11/22/2011 - After our move to Apache Tomcat, this file is obsolete?

<datasources>
  <local-tx-datasource>
    <jndi-name>CspaceDS</jndi-name>
    <use-java-context>false</use-java-context>
    <connection-url>@DB_CSPACE_URL@</connection-url>
    <driver-class>@DB_DRIVER_CLASS@</driver-class>
    <user-name>@DB_CSPACE_USER@</user-name>
    <password>@DB_CSPACE_PASSWORD@</password>
    <exception-sorter-class-name>@DB_EXCEPTION_SORTER@</exception-sorter-class-name>
    <!-- should only be used on drivers after 3.22.1 with "ping" support
    <valid-connection-checker-class-name>org.jboss.resource.adapter.jdbc.vendor.MySQLValidConnectionChecker</valid-connection-checker-class-name>
    -->
    <!-- sql to call when connection is created
    <new-connection-sql>some arbitrary sql</new-connection-sql>
      -->
    <!-- sql to call on an existing pooled connection when it is obtained from pool - MySQLValidConnectionChecker is preferred for newer drivers
    <check-valid-connection-sql>some arbitrary sql</check-valid-connection-sql>
      -->

    <!-- corresponding type-mapping in the standardjbosscmp-jdbc.xml (optional) -->
    <metadata>
       <type-mapping>@DB_TYPE_MAPPING@</type-mapping>
    </metadata>
  </local-tx-datasource>
  <local-tx-datasource>
    <jndi-name>NuxeoDS</jndi-name>
    <use-java-context>false</use-java-context>
    <connection-url>@DB_NUXEO_URL@</connection-url>
    <driver-class>@DB_DRIVER_CLASS@</driver-class>
    <user-name>@DB_NUXEO_USER@</user-name>
    <password>@DB_NUXEO_PASSWORD@</password>
    <exception-sorter-class-name>@DB_EXCEPTION_SORTER@</exception-sorter-class-name>
    <!-- should only be used on drivers after 3.22.1 with "ping" support
    <valid-connection-checker-class-name>org.jboss.resource.adapter.jdbc.vendor.MySQLValidConnectionChecker</valid-connection-checker-class-name>
    -->
    <!-- sql to call when connection is created
    <new-connection-sql>some arbitrary sql</new-connection-sql>
      -->
    <!-- sql to call on an existing pooled connection when it is obtained from pool - MySQLValidConnectionChecker is preferred for newer drivers
    <check-valid-connection-sql>some arbitrary sql</check-valid-connection-sql>
      -->

    <!-- corresponding type-mapping in the standardjbosscmp-jdbc.xml (optional) -->
    <metadata>
       <type-mapping>@DB_TYPE_MAPPING@</type-mapping>
    </metadata>
  </local-tx-datasource>
</datasources>

